# -*- coding: utf-8 -*-
"""plot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CF_kIhKF4BAQJHL5RuEOaj9DGY1gzOeV
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

data_testGroup_300 = pd.read_csv('nestedLoopsMemory300_testGroup.csv',sep = ';')
data_testSize_300 = pd.read_csv("nestedLoopsMemory300_testSize.csv", sep = ';')
data_testGroup_100000 = pd.read_csv('nestedLoopsMemory100000_testGroup.csv',sep = ';')
data_testSize_100000 = pd.read_csv("nestedLoopsMemory100000_testSize.csv", sep = ';')

info_size = pd.read_csv('info_size.csv', sep= ';', header=None)
info_group = pd.read_csv('info_group.csv', sep= ';')

# We don't care for the first file
data_testGroup_300 = data_testGroup_300[1:]
data_testGroup_100000 = data_testGroup_100000[1:]

file_size = info_size[1].values

# We fixed size 400 000, and we change proportion for group size 
group_size = info_group[' groupsize / filesize'].values

fig = plt.figure(1, figsize=(15, 10))

plt.plot(file_size, data_testSize_300[' Single'].values, '-', marker='o', label='Single thread')
plt.plot(file_size, data_testSize_300[' Multi'].values, '-',marker='o', label="Multi thread")
plt.plot(file_size, data_testSize_300[' Spark'], '-', marker='o', label="Spark")
plt.legend()
plt.title("Nested Loops Memory_300 depending in size of data")
plt.xlabel('Size of file')
plt.ylabel('time to run in ms')

plt.show()

fig = plt.figure(1, figsize=(15, 10))

plt.plot(file_size, data_testSize_100000[' Single'].values, '-', marker='o', label='Single thread')
plt.plot(file_size, data_testSize_100000[' Multi'].values, '-',marker='o', label="Multi thread")
plt.plot(file_size, data_testSize_100000[' Spark'], '-', marker='o', label="Spark")
plt.legend()
plt.title("Nested Loops Memory_300 depending in size of data")
plt.xlabel('Proportion of group in file size = 400 000')
plt.ylabel('time to run in ms')

plt.show()

fig = plt.figure(1, figsize=(15, 10))

plt.plot(group_size, data_testGroup_300[' Single'].values, '-', marker='o', label='Single thread')
plt.plot(group_size, data_testGroup_300[' Multi'].values, '-',marker='o', label="Multi thread")
plt.plot(group_size, data_testGroup_300[' Spark'], '-', marker='o', label="Spark")
plt.legend()
plt.title("Nested Loops Memory_300 depending in fraction of group in data size of 400 000 rows")
plt.xlabel('Proportion of group in file size = 400 000')
plt.ylabel('time to run in ms')

plt.show()

fig = plt.figure(1, figsize=(15, 10))

plt.plot(group_size, data_testGroup_100000[' Single'].values, '-', marker='o', label='Single thread')
plt.plot(group_size, data_testGroup_100000[' Multi'].values, '-',marker='o', label="Multi thread")
plt.plot(group_size, data_testGroup_100000[' Spark'], '-', marker='o', label="Spark")
plt.legend()
plt.title("Nested Loops Memory_100000 depending in fraction of group in data size of 400 000 rows")
plt.xlabel('Proportion of group in file size = 400 000')
plt.ylabel('time to run in ms')

plt.show()

